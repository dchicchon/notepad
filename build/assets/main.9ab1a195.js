import{m as R,r as t,j as y,g as n,e as M,i as b,F as d,a as f,B as x,b as g,c as U,R as j}from"./jsx-runtime.eca01024.js";const m=R.label,K={[m]:R},k=r=>{K[m].setTitle(r)};function P(){const[r,G]=t.exports.useState(25),[O,V]=t.exports.useState(25),[T,F]=t.exports.useState(25),[_,c]=t.exports.useState("#282c34"),[W,z]=t.exports.useState(""),[v,S]=t.exports.useState("white"),[X,B]=t.exports.useState({path:null,name:"Untitled"}),[C,N]=t.exports.useState(""),[w,A]=t.exports.useState(0),l=t.exports.useRef(null);t.exports.useEffect(()=>{l.current&&l.current.setSelectionRange(w,w)},[l,C]),t.exports.useEffect(()=>{async function e(){k("Untitled");let a=await n(d),s=await n(f),i=await n(x),u=await n(g);return console.log("FontSize:",a),console.log("FontColor:",s),console.log("BackgroundColor:",i),console.log("FontFamily:",u),a&&F(a),s&&S(s),i&&c(i),u&&c(u),await M("state_change",async o=>{if(console.log("Retrieved a state change"),console.log(o.payload),!!o.payload){if(o.payload.text&&(console.log("updating text"),h({text:o.payload.text})),o.payload.name){let p={path:o.payload.path,name:o.payload.name};E(p)}if(o.payload.setting)switch(o.payload.setting){case d:let p=await n(d);F(p);break;case f:let $=await n(f);S($);break;case x:let I=await n(x);c(I);break;case g:let L=await n(g);z(L);break}console.log(o.payload)}})}e()},[]);const h=({text:e,event:a})=>{a&&A(a.target.selectionStart),N(e),b("db_insert",{key:"text",value:e}).catch(s=>{console.log("error"),console.log(s)})},E=async e=>{B(e),k(e.name),b("db_insert",{key:"file",value:e.path}).catch(a=>{console.log("error"),console.log(a)})};return y("textarea",{ref:l,className:"paper",style:(()=>({fontFamily:"",color:v,backgroundColor:_,fontSize:`${T}px`,padding:`${r}px ${O}px`}))(),value:C,onChange:e=>h({text:e.target.value,event:e}),autoFocus:!0})}const Y=document.getElementById("root"),D=U(Y);D.render(y(j.StrictMode,{children:y(P,{})}));
